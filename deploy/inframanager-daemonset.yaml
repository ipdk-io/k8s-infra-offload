apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: inframanager-ds
  namespace: kube-system
spec:
  selector:
      matchLabels:
        name: inframanager
  template:
    metadata:
      labels:
        name: inframanager
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      # this toleration is to have the daemonset runnable on master nodes
      # remove it if your masters can't run pods
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node.kubernetes.io/network-unavailable
        effect: NoSchedule
        operator: Exists
      - key: node.kubernetes.io/not-ready
        effect: NoSchedule
        operator: Exists
      hostNetwork: true
      serviceAccountName: inframanager-sa
      containers:
      - name: manager
        image: inframanager:latest
        imagePullPolicy: Always
        volumeMounts:
        - name: db
          mountPath: /var/lib/cni/inframanager
        - name: client-certs
          mountPath: /etc/pki/inframanager/certs/client
        - name: server-certs
          mountPath: /etc/pki/inframanager/certs/server
        command:
        - /inframanager
        env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
      volumes:
      - name: db
        hostPath:
          path: /var/lib/cni/inframanager
          type: DirectoryOrCreate
      - name: client-certs
        secret:
          secretName: manager-client-secret
          optional: true
      - name: server-certs
        secret:
          secretName: manager-server-secret
          optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
